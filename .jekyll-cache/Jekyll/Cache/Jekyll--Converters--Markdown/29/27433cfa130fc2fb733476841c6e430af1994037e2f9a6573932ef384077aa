I"»<p><a href="https://ifallen.github.io">ÁâàÊùÉÊâÄÊúâ,ËΩ¨ËΩΩËØ∑Ê≥®ÊòéÂá∫Â§Ñ!</a></p>

<h2 id="nsurlsession-piece-code-for-beginnner"><code class="highlighter-rouge">NSURLSession Piece Code For Beginnner</code></h2>
<hr />

<h4 id="1-get-request">1. <code class="highlighter-rouge">GET Request</code></h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>func getRequest() {
        let session = NSURLSession.sharedSession()
        let task = session.dataTaskWithURL(NSURL(string: "http://127.0.0.1:5000/api/list")!) { (data, response, error) in
            if let data = data {
                let string = String.init(data: data, encoding:NSUTF8StringEncoding)
                print(string)
                do{
                    let obj = try NSJSONSerialization.JSONObjectWithData(data, options: []) as! [String:AnyObject]
                    let results = obj["results"] as? [String]
                }catch{
                    print(error)
                }
            }
        }
        task.resume()
    }
</code></pre></div></div>

<h4 id="2-post-request">2. <code class="highlighter-rouge">POST Request</code></h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>func postRequest() {
        let session = NSURLSession.sharedSession()
        let request = NSMutableURLRequest(URL: NSURL(string: "http://127.0.0.1:5000/api/login")!)
        request.HTTPMethod = "POST"
        let params = "name=admin&amp;password=admin"
        request.HTTPBody = params.dataUsingEncoding(NSUTF8StringEncoding)
        let task = session.dataTaskWithRequest(request) { (data, response, error) in
            if let data = data {
                let string = String.init(data: data, encoding:NSUTF8StringEncoding)
                print(string)
                do{
                    let obj = try NSJSONSerialization.JSONObjectWithData(data, options: []) as! [String:AnyObject]
                    let results = obj["results"] as? [String]
                }catch{
                    print(error)
                }
            }
        }
        task.resume()
    }
</code></pre></div></div>

<h4 id="3-load-image">3. <code class="highlighter-rouge">Load Image</code></h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>func loadWebImage() {
        let session = NSURLSession.sharedSession()
        let task = session.downloadTaskWithURL(NSURL(string: "http://git.oschina.net/qcrm/ImageTemp/raw/master/1.jpg")!) { (url:NSURL?, response:NSURLResponse?, error:NSError?) in
            if error != nil {
                print("Load Image Data Failed...")
            }else {
                if let url = url, data = NSData(contentsOfURL: url),image = UIImage(data: data) {
                    dispatch_async(dispatch_get_main_queue(), { 
                        self.imgCenter.image = image
                    })
                }
            }
        }
        task.resume()
    }
</code></pre></div></div>

:ET